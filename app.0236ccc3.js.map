{"version":3,"sources":["src/app.js"],"names":["API_URL","SomeComponent","postsData","getResults","fetch","response","json","render","console","log","testText","someData","map","data","title","join"],"mappings":";AAkCG,aAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAlCH,IAAMA,EAAU,6CAEHC,EAAAA,WACG,SAAA,IAAA,EAAA,KAAA,GACPC,KAAAA,UAAY,KACZC,KAAAA,aA6BN,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAAA,MAAA,WA1BD,IAAA,EAAA,EAAA,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAE2BC,OAF3B,EAAA,KAAA,EAAA,EAAA,KAAA,EAE2BA,MAAMJ,GAFjC,KAAA,EAG2BK,OADjBA,EAFV,EAAA,KAAA,EAAA,KAAA,EAG2BA,EAASC,OAHpC,KAAA,EAGSJ,KAAAA,UAHT,EAAA,KAISK,KAAAA,SAJT,EAAA,KAAA,GAAA,MAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,MAAA,GAMIC,QAAQC,IAAR,EAAA,IANJ,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,EAAA,SA0BC,OAAA,WAAA,OAAA,EAAA,MAAA,KAAA,YAAA,IAAA,CAAA,IAAA,SAhBD,MAAA,WACQC,IACAC,EAAW,KAAKT,UAClB,KAAKA,UACFU,IAAI,SAACC,GACUA,MAAAA,OAAAA,OAAAA,EAAKC,MAAnB,WAEDC,KAAK,IACR,GAGAL,OAFJF,QAAQC,IAAIE,GAERD,gBAAAA,OAVa,cAYbC,wBAAAA,OAAAA,EAHJ,iCAMD,EAhCUV,GAgCV,QAAA,cAAA","file":"app.0236ccc3.js","sourceRoot":"..","sourcesContent":["const API_URL = \"https://jsonplaceholder.typicode.com/posts\";\n\nexport class SomeComponent {\n  constructor() {\n    this.postsData = null;\n    this.getResults();\n  }\n\n  async getResults() {\n    try {\n      const response = await fetch(API_URL);\n      this.postsData = await response.json();\n      this.render();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const testText = \"Hello World\";\n    const someData = this.postsData\n      ? this.postsData\n          .map((data) => {\n            return `<li>${data.title}</li>`;\n          })\n          .join(\"\")\n      : \"\";\n    console.log(someData);\n    return `<div>\n      ${testText}\n      <ul>\n      ${someData}\n      </ul>\n    </div>`;\n  }\n}\n"]}